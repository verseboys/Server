#coding:utf-8

"""
Django settings for yizhu project.

Generated by 'django-admin startproject' using Django 1.10.1.

For more information on this file, see
https://docs.djangoproject.com/en/1.10/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/1.10/ref/settings/
"""
from __future__ import absolute_import
import os
import django.utils.log
import djcelery
from datetime import timedelta
from redis import StrictRedis

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/1.10/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'yg9^2vv6k*ku&uq*_9_qova00c%xmmqj18g5z1=z^#z7+f$m(2'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []

# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'corsheaders',
    'api.front',
    'api.supervisor',
    'api.webapp_front',
    'articlemodel',
    'frontmodel',
    'supervisormodel',
    'extends',
    'questionsandanswersmodel',
    'methodmodel',
    'newsmodel',
    'videomodel',
    'djcelery',
    'anniversary',
    'models',
]

MIDDLEWARE = [

    'corsheaders.middleware.CorsMiddleware',
    'django.middleware.common.CommonMiddleware',

    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    #'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',

    'medieco.middleware.FrontUserAuthenticationMiddleware'
]

# 跨域增加忽略
CORS_ALLOW_CREDENTIALS = True
CORS_ORIGIN_ALLOW_ALL = True
CORS_ORIGIN_WHITELIST = (
    '*'
)

ROOT_URLCONF = 'yizhu.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',

                'medieco.context_processors.front_user',
            ],
        },
    },
]

WSGI_APPLICATION = 'yizhu.wsgi.application'


# Database
# https://docs.djangoproject.com/en/1.10/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.mysql',
        'NAME': 'dbfarm-db-716',
        'USER': 'root',
        'PASSWORD': 'password',
        'HOST':'dbfarm-mariadb10.autoops.svc.k8s.bjo.natureself.site',
        'PORT': 3306,
        'OPTIONS': {
            'init_command':"SET sql_mode='STRICT_TRANS_TABLES'",
            'charset':'utf8',
        }
    }
}

# CACHES
CACHES = {
    'default': {
        'BACKEND': 'django.core.cache.backends.memcached.MemcachedCache',
        'LOCATION': [
            'memcached.testing-master.svc.k8s.bjo.natureself.site:11211',
        ]
    }
}

#SESSION
SESSION_COOKIE_AGE = 60*60*24*7*2

#基于数据库+缓存,每次往缓存中写数据的时候,都会同步到数据库中,做持久化
SESSION_ENGINE = 'django.contrib.sessions.backends.cached_db'

'''

celery设置
'''
# redis_connent_url = 'redis://testing-redis.natureself.site'
redis_connent_url = 'redis://localhost'
djcelery.setup_loader()
BROKER_URL = '{}:6379/0'.format(redis_connent_url)
CELERY_RESULT_BACKEND = '{}:6379/1'.format(redis_connent_url)
CELERY_TASK_SERIALIZER = 'json'
CELERY_RESULT_SERIALIZER = 'json'
CELERY_IMPORTS = ('extends.tasks',)
# # CELERY_LOG_FILE = ''
# CELERY_MAX_TASKS_PER_CHILD = 10 # 每个workder最多执行10个任务就被销毁
# CELERY_PREFETCH_MULTIPLIER = 5 #每次去redis取任务的数量
CELERYBEAT_SCHEDULER = 'djcelery.schedulers.DatabaseScheduler' #将定时任务存储在django数据库中


redis_cache = StrictRedis.from_url("{}:/6379/2".format(redis_connent_url))





# Password validation
# https://docs.djangoproject.com/en/1.10/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/1.10/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'Asia/Shanghai'

USE_I18N = True

USE_L10N = True

USE_TZ = False


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/1.10/howto/static-files/

STATIC_URL = '/static/'
STATIC_ROOT = os.path.join(BASE_DIR, 'static').replace("\\", "/")

MEDIA_URL = '/media/'
MEDIA_ROOT = os.path.join(BASE_DIR, 'media').replace("\\", "/")  #图片存放目录

LOGIN_URL = '/supervisor/login/'

#设置是否开启url访问地址后面不为/跳转至带有/的路径
APPEND_SLASH=True

#email config
EMAIL_HOST_USER = 'admin@mediecogroup.com'
EMAIL_HOST_PASSWORD = '1234567890qwertyuiop!@#$%^&*()'  #授权码
EMAIL_HOST = 'smtp.mxhichina.com' #域名
EMAIL_PORT = 465 #邮箱端口号
#EMAIL_USE_TLS = True #是否加密
EMAIL_USE_SSL = True


LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    'root': {
        'level': 'INFO',
        'handlers': ['console'],
    },
    'filters': {
        'require_debug_true': {
            '()': 'django.utils.log.RequireDebugTrue',
        }
    },
    'handlers': {
        'console': {
            'level': 'DEBUG',
            'filters': ['require_debug_true'],
            'class': 'logging.StreamHandler',
        },
    },
    'loggers': {
        'django.request': {
            'level': 'DEBUG' if DEBUG else 'INFO',
            'handlers': ['console'],
            'propagate': False,
        },
        'django.db.backends': {
            'level': 'DEBUG' if DEBUG else 'INFO',
            'handlers': ['console'],
            'propagate': False,
        },
    },
}

STORAGE_SERVICE_BASE_URL='https://master.testing.natureself.site'
# todo 其他地方统一使用 STORAGE_SERVICE_BASE_URL
STORAGE_SERVICE_FILE_URL='https://master.testing.natureself.site/ss/v1/files/{0}/url'

PASSWORD_HASHERS = [
    # 以下4个为 Django 设置中默认启用的 hasher，见
    # https://docs.djangoproject.com/en/2.2/topics/auth/passwords/
    'django.contrib.auth.hashers.PBKDF2PasswordHasher',
    'django.contrib.auth.hashers.PBKDF2SHA1PasswordHasher',
    'django.contrib.auth.hashers.Argon2PasswordHasher',
    'django.contrib.auth.hashers.BCryptSHA256PasswordHasher',

    'medieco.hashers.MediecoMD5PasswordHasher',
]

AUTHENTICATION_BACKENDS = [
    'medieco.backends.SupervisorUserAuthenticationBackend',
    'medieco.backends.FrontUserPasswordAuthenticationBackend',
    'medieco.backends.FrontUserCodeAuthenticationBackend',
]

# 阿里云短信配置，用于 natureself.django.notification
# 当 DRY_RUN 为 True 时，不会实际发送短信，而是会将短信内容打印到终端，在本地开发环境中使用
ALI_SMS_DRY_RUN = True
ALI_SMS_ACCESS_KEY_ID = '****************'
ALI_SMS_ACCESS_KEY_SECRET = '******************************'
