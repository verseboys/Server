# -*- coding: utf-8 -*-
# Generated by Django 1.10.5 on 2018-11-29 14:26
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('videomodel', '0015_videomodel_teacher_introduction'),
        ('frontmodel', '0011_auto_20181124_1224'),
        ('models', '0016_auto_20181124_1224'),
    ]

    operations = [
        migrations.CreateModel(
            name='NetworkCourse',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=191)),
                ('type', models.IntegerField(choices=[(0, '\u57fa\u672c\u8bfe\u7a0b'), (1, '\u8865\u5145\u8bfe\u7a0b')], default=0)),
                ('icon_ss_key', models.CharField(blank=True, max_length=191)),
                ('description', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now=True)),
                ('status', models.CharField(choices=[('plan', '\u5f85\u53d1\u5e03'), ('draft', '\u8349\u7a3f'), ('publish', '\u5df2\u53d1\u5e03')], default='draft', max_length=10)),
                ('published_at', models.DateTimeField(null=True)),
            ],
            options={
                'db_table': 'y_network_course',
            },
        ),
        migrations.CreateModel(
            name='NetworkCourseTrainLog',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='models.NetworkCourse')),
                ('participant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='frontmodel.FrontUserModel')),
                ('video', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='videomodel.VideoModel')),
            ],
            options={
                'db_table': 'y_network_course_train_logs',
            },
        ),
        migrations.CreateModel(
            name='NetworkCourseTrainProgress',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('begin_at', models.DateTimeField(null=True)),
                ('end_at', models.DateTimeField(null=True)),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='models.NetworkCourse')),
                ('participant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='frontmodel.FrontUserModel')),
            ],
            options={
                'db_table': 'y_network_course_train_progress',
            },
        ),
        migrations.CreateModel(
            name='NetworkCourseVideo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order', models.IntegerField()),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='models.NetworkCourse')),
                ('video', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='videomodel.VideoModel')),
            ],
            options={
                'db_table': 'y_network_course_videos',
            },
        ),
        migrations.AddField(
            model_name='network',
            name='train_description',
            field=models.TextField(blank=True),
        ),
        migrations.AddField(
            model_name='networkcourse',
            name='network',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='models.Network'),
        ),
        migrations.AddField(
            model_name='networkcourse',
            name='participants',
            field=models.ManyToManyField(through='models.NetworkCourseTrainProgress', to='frontmodel.FrontUserModel'),
        ),
        migrations.AddField(
            model_name='networkcourse',
            name='videos',
            field=models.ManyToManyField(through='models.NetworkCourseVideo', to='videomodel.VideoModel'),
        ),
    ]
